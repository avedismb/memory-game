{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["aux","App","useState","turn","setTurn","cardsSelected","setCardsSelected","map","x","idx","onClick","id","setTimeout","length","style","backgroundColor","margin","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAAe,I,MCITA,EAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAmC3CC,MAhCf,WACE,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAYA,OACE,gCACE,4CACA,wDACA,iDAAoBH,EAAO,MAAQ,UAClCH,EAAIO,KAAI,SAACC,EAAGC,GAAJ,OACP,wBAEEC,QAAS,kBAlBGC,EAkBeH,EAjBjCF,EAAiB,GAAD,mBAAKD,GAAL,CAAoBM,UACpCC,YAAW,WACoB,IAAzBP,EAAcQ,SAChBT,GAASD,GACTG,EAAiB,OAElB,KAPe,IAAAK,GAmBZG,MAAO,CAAEC,gBAAiB,OAAQC,OAAQ,GAH5C,SAKIX,EAAcY,SAAST,GAAqB,YAAhB,eAJzBC,UChBAS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.81fa692b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \"./App.css\";\nimport logo from \"./logo.svg\";\nimport { useState } from \"react\";\n\nconst aux = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8];\nconst redTurn = \"red\";\n\nfunction App() {\n  const [turn, setTurn] = useState(true);\n  const [cardsSelected, setCardsSelected] = useState([]);\n\n  const onClickCard = id => {\n    setCardsSelected([...cardsSelected, id]);\n    setTimeout(() => {\n      if (cardsSelected.length === 1) {\n        setTurn(!turn);\n        setCardsSelected([]);\n      }\n    }, 3000);\n  };\n\n  return (\n    <div>\n      <p>Memory Game</p>\n      <button>Arrancar de vuelta</button>\n      <p>Turno del color {turn ? \"Red\" : \"Azul\"}</p>\n      {aux.map((x, idx) => (\n        <button\n          key={idx}\n          onClick={() => onClickCard(x)}\n          style={{ backgroundColor: \"blue\", margin: 5 }}\n        >\n          {!cardsSelected.includes(x) ? \"QUE HAY ACA\" : \"LA ELIGIO\"}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}